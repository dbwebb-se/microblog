---
- name: Continuous Deployment
  hosts: production
  remote_user: deploy
  become: true
  serial: 1

  tasks:
    - name: Get the latest GitHub release tag
      uri:
        url: "https://api.github.com/repos/kalinchukkristina/microblog/releases/latest"
        method: GET
        return_content: yes
      register: github_release

    - name: Set the release tag as a variable
      set_fact:
        release_tag: "{{ github_release.json.tag_name | regex_replace('^v', '') }}"
    
    - name: Get Microblog version from the website
      uri:
        url: "https://kristinadev.me/version"
        validate_certs: no
        method: GET
        return_content: yes
      register: version_response

    - name: Extract version from the website
      set_fact:
        deployed_version: "{{ version_response.content | regex_replace('^The current version of the app is: ', '') }}"

    - name: Fail the playbook if versions do not match
      fail:
        msg: "GitHub version ({{ release_tag }}) does not match deployed version ({{ deployed_version }})"
      when: release_tag != deployed_version

    - name: Print a message if versions match
      debug:
        msg: "GitHub version ({{ release_tag }}) matches deployed version ({{ deployed_version }})"
      when: release_tag == deployed_version

    - name: Remove the existing Microblog containers
      docker_container:
        name: microblog
        state: absent
      ignore_errors: yes

    - name: Connect to Docker Network
      docker_network:
        name: microblog-network
        state: present

    - name: Start Microblog Container
      docker_container:
        name: microblog
        image: "kristinakalinchuk/microblog:{{ release_tag }}"
        env:
          DATABASE_URL: "mysql+pymysql://microblog:G5Evdo1IqgVNl51@{{ groups['databasen'][0] }}:3306/microblog"
        ports:
          - "8000:5000"
        networks:
          - name: microblog-network
        restart_policy: always
