version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: microblog
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  test:
    docker:
      - image: circleci/python:3.7
    
    working_directory: ~/repo
    
    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install wheel
            pip install -r requirements.txt
            make install-test
            flask db upgrade
      # Step 3: run linter and tests
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            make validate test-unit test-integration

  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKER_PWD" | docker login -u "$DOCKER_LOGIN" --password-stdin
            docker push $IMAGE_NAME:latest

workflows:
  version: 2
  build-master:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - test
            - build
          filters:
            branches:
              only: master
